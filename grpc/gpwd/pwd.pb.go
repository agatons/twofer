// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pwd.proto

package gpwd

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnrollReq struct {
	Password             string   `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnrollReq) Reset()         { *m = EnrollReq{} }
func (m *EnrollReq) String() string { return proto.CompactTextString(m) }
func (*EnrollReq) ProtoMessage()    {}
func (*EnrollReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_pwd_ece606c9a6683127, []int{0}
}
func (m *EnrollReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnrollReq.Unmarshal(m, b)
}
func (m *EnrollReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnrollReq.Marshal(b, m, deterministic)
}
func (dst *EnrollReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnrollReq.Merge(dst, src)
}
func (m *EnrollReq) XXX_Size() int {
	return xxx_messageInfo_EnrollReq.Size(m)
}
func (m *EnrollReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EnrollReq.DiscardUnknown(m)
}

var xxx_messageInfo_EnrollReq proto.InternalMessageInfo

func (m *EnrollReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthReq struct {
	Password             string   `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	UserBlob             string   `protobuf:"bytes,2,opt,name=userBlob" json:"userBlob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthReq) Reset()         { *m = AuthReq{} }
func (m *AuthReq) String() string { return proto.CompactTextString(m) }
func (*AuthReq) ProtoMessage()    {}
func (*AuthReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_pwd_ece606c9a6683127, []int{1}
}
func (m *AuthReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthReq.Unmarshal(m, b)
}
func (m *AuthReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthReq.Marshal(b, m, deterministic)
}
func (dst *AuthReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthReq.Merge(dst, src)
}
func (m *AuthReq) XXX_Size() int {
	return xxx_messageInfo_AuthReq.Size(m)
}
func (m *AuthReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthReq.DiscardUnknown(m)
}

var xxx_messageInfo_AuthReq proto.InternalMessageInfo

func (m *AuthReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AuthReq) GetUserBlob() string {
	if m != nil {
		return m.UserBlob
	}
	return ""
}

type Res struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid" json:"valid,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Res) Reset()         { *m = Res{} }
func (m *Res) String() string { return proto.CompactTextString(m) }
func (*Res) ProtoMessage()    {}
func (*Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_pwd_ece606c9a6683127, []int{2}
}
func (m *Res) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Res.Unmarshal(m, b)
}
func (m *Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Res.Marshal(b, m, deterministic)
}
func (dst *Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Res.Merge(dst, src)
}
func (m *Res) XXX_Size() int {
	return xxx_messageInfo_Res.Size(m)
}
func (m *Res) XXX_DiscardUnknown() {
	xxx_messageInfo_Res.DiscardUnknown(m)
}

var xxx_messageInfo_Res proto.InternalMessageInfo

func (m *Res) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Res) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Blob struct {
	UserBlob             string   `protobuf:"bytes,1,opt,name=userBlob" json:"userBlob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}
func (*Blob) Descriptor() ([]byte, []int) {
	return fileDescriptor_pwd_ece606c9a6683127, []int{3}
}
func (m *Blob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blob.Unmarshal(m, b)
}
func (m *Blob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blob.Marshal(b, m, deterministic)
}
func (dst *Blob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blob.Merge(dst, src)
}
func (m *Blob) XXX_Size() int {
	return xxx_messageInfo_Blob.Size(m)
}
func (m *Blob) XXX_DiscardUnknown() {
	xxx_messageInfo_Blob.DiscardUnknown(m)
}

var xxx_messageInfo_Blob proto.InternalMessageInfo

func (m *Blob) GetUserBlob() string {
	if m != nil {
		return m.UserBlob
	}
	return ""
}

func init() {
	proto.RegisterType((*EnrollReq)(nil), "gpwd.EnrollReq")
	proto.RegisterType((*AuthReq)(nil), "gpwd.AuthReq")
	proto.RegisterType((*Res)(nil), "gpwd.Res")
	proto.RegisterType((*Blob)(nil), "gpwd.Blob")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PWD service

type PWDClient interface {
	Enroll(ctx context.Context, in *EnrollReq, opts ...grpc.CallOption) (*Blob, error)
	Auth(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*Res, error)
	Upgrade(ctx context.Context, in *Blob, opts ...grpc.CallOption) (*Blob, error)
}

type pWDClient struct {
	cc *grpc.ClientConn
}

func NewPWDClient(cc *grpc.ClientConn) PWDClient {
	return &pWDClient{cc}
}

func (c *pWDClient) Enroll(ctx context.Context, in *EnrollReq, opts ...grpc.CallOption) (*Blob, error) {
	out := new(Blob)
	err := grpc.Invoke(ctx, "/gpwd.PWD/Enroll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pWDClient) Auth(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := grpc.Invoke(ctx, "/gpwd.PWD/Auth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pWDClient) Upgrade(ctx context.Context, in *Blob, opts ...grpc.CallOption) (*Blob, error) {
	out := new(Blob)
	err := grpc.Invoke(ctx, "/gpwd.PWD/Upgrade", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PWD service

type PWDServer interface {
	Enroll(context.Context, *EnrollReq) (*Blob, error)
	Auth(context.Context, *AuthReq) (*Res, error)
	Upgrade(context.Context, *Blob) (*Blob, error)
}

func RegisterPWDServer(s *grpc.Server, srv PWDServer) {
	s.RegisterService(&_PWD_serviceDesc, srv)
}

func _PWD_Enroll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnrollReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PWDServer).Enroll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpwd.PWD/Enroll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PWDServer).Enroll(ctx, req.(*EnrollReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PWD_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PWDServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpwd.PWD/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PWDServer).Auth(ctx, req.(*AuthReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PWD_Upgrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Blob)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PWDServer).Upgrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpwd.PWD/Upgrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PWDServer).Upgrade(ctx, req.(*Blob))
	}
	return interceptor(ctx, in, info, handler)
}

var _PWD_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gpwd.PWD",
	HandlerType: (*PWDServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enroll",
			Handler:    _PWD_Enroll_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _PWD_Auth_Handler,
		},
		{
			MethodName: "Upgrade",
			Handler:    _PWD_Upgrade_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pwd.proto",
}

func init() { proto.RegisterFile("pwd.proto", fileDescriptor_pwd_ece606c9a6683127) }

var fileDescriptor_pwd_ece606c9a6683127 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x31, 0x4f, 0x86, 0x30,
	0x10, 0x86, 0x41, 0x10, 0xe8, 0x25, 0xc6, 0xe4, 0xe2, 0x40, 0x98, 0x4c, 0x1d, 0x70, 0x62, 0xd0,
	0xf8, 0x03, 0x30, 0xba, 0x9b, 0x26, 0xc6, 0xb9, 0xa4, 0x0d, 0x9a, 0x54, 0x5b, 0x5b, 0xb0, 0x7f,
	0xdf, 0x94, 0x02, 0xf9, 0x98, 0xbe, 0xf1, 0xb9, 0xeb, 0xfb, 0xa6, 0xcf, 0x01, 0x31, 0x5e, 0x74,
	0xc6, 0xea, 0x49, 0x63, 0x3e, 0x1a, 0x2f, 0x68, 0x0b, 0xe4, 0xf5, 0xc7, 0x6a, 0xa5, 0x98, 0xfc,
	0xc5, 0x06, 0x2a, 0xc3, 0x9d, 0xf3, 0xda, 0x8a, 0x3a, 0xbd, 0x4d, 0xef, 0x09, 0xdb, 0x99, 0xf6,
	0x50, 0xf6, 0xf3, 0xf4, 0x79, 0xe6, 0x59, 0xd8, 0xcd, 0x4e, 0xda, 0x67, 0xa5, 0x87, 0xfa, 0x22,
	0xee, 0x36, 0xa6, 0x4f, 0x90, 0x31, 0xe9, 0xf0, 0x06, 0x2e, 0xff, 0xb8, 0xfa, 0x8a, 0xd9, 0x8a,
	0x45, 0xc0, 0x1a, 0xca, 0x6f, 0xe9, 0x1c, 0x1f, 0xe5, 0x9a, 0xdb, 0x90, 0x52, 0xc8, 0x43, 0xfc,
	0x50, 0x9d, 0x1e, 0xab, 0x1f, 0x3c, 0x64, 0x6f, 0x1f, 0x2f, 0xd8, 0x42, 0x11, 0x6d, 0xf0, 0xba,
	0x0b, 0x7a, 0xdd, 0xee, 0xd6, 0x40, 0x1c, 0x2c, 0x1f, 0x49, 0x90, 0x42, 0x1e, 0x6c, 0xf0, 0x2a,
	0x4e, 0x57, 0xb3, 0x86, 0x44, 0x64, 0xd2, 0xd1, 0x04, 0xef, 0xa0, 0x7c, 0x37, 0xa3, 0xe5, 0x42,
	0xe2, 0x49, 0xf8, 0x58, 0x34, 0x14, 0xcb, 0x31, 0x1f, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x54,
	0x00, 0x6d, 0xda, 0x59, 0x01, 0x00, 0x00,
}
