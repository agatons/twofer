// Code generated by protoc-gen-go. DO NOT EDIT.
// source: otp.proto

package gotp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Alg int32

const (
	Alg_SHA_1   Alg = 0
	Alg_SHA_256 Alg = 1
	Alg_SHA_512 Alg = 2
)

var Alg_name = map[int32]string{
	0: "SHA_1",
	1: "SHA_256",
	2: "SHA_512",
}
var Alg_value = map[string]int32{
	"SHA_1":   0,
	"SHA_256": 1,
	"SHA_512": 2,
}

func (x Alg) String() string {
	return proto.EnumName(Alg_name, int32(x))
}
func (Alg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_otp_335137b2d8af27c1, []int{0}
}

type Mode int32

const (
	Mode_TIME    Mode = 0
	Mode_COUNTER Mode = 1
)

var Mode_name = map[int32]string{
	0: "TIME",
	1: "COUNTER",
}
var Mode_value = map[string]int32{
	"TIME":    0,
	"COUNTER": 1,
}

func (x Mode) String() string {
	return proto.EnumName(Mode_name, int32(x))
}
func (Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_otp_335137b2d8af27c1, []int{1}
}

type Digits int32

const (
	Digits_SIX   Digits = 0
	Digits_EIGHT Digits = 1
)

var Digits_name = map[int32]string{
	0: "SIX",
	1: "EIGHT",
}
var Digits_value = map[string]int32{
	"SIX":   0,
	"EIGHT": 1,
}

func (x Digits) String() string {
	return proto.EnumName(Digits_name, int32(x))
}
func (Digits) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_otp_335137b2d8af27c1, []int{2}
}

type Enrollment struct {
	Issuer               string   `protobuf:"bytes,1,opt,name=issuer" json:"issuer,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	Alg                  Alg      `protobuf:"varint,3,opt,name=alg,enum=gotp.Alg" json:"alg,omitempty"`
	Mode                 Mode     `protobuf:"varint,4,opt,name=mode,enum=gotp.Mode" json:"mode,omitempty"`
	Digits               Digits   `protobuf:"varint,6,opt,name=digits,enum=gotp.Digits" json:"digits,omitempty"`
	Period               uint32   `protobuf:"varint,7,opt,name=period" json:"period,omitempty"`
	SecretSize           uint32   `protobuf:"varint,8,opt,name=secretSize" json:"secretSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Enrollment) Reset()         { *m = Enrollment{} }
func (m *Enrollment) String() string { return proto.CompactTextString(m) }
func (*Enrollment) ProtoMessage()    {}
func (*Enrollment) Descriptor() ([]byte, []int) {
	return fileDescriptor_otp_335137b2d8af27c1, []int{0}
}
func (m *Enrollment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Enrollment.Unmarshal(m, b)
}
func (m *Enrollment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Enrollment.Marshal(b, m, deterministic)
}
func (dst *Enrollment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Enrollment.Merge(dst, src)
}
func (m *Enrollment) XXX_Size() int {
	return xxx_messageInfo_Enrollment.Size(m)
}
func (m *Enrollment) XXX_DiscardUnknown() {
	xxx_messageInfo_Enrollment.DiscardUnknown(m)
}

var xxx_messageInfo_Enrollment proto.InternalMessageInfo

func (m *Enrollment) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *Enrollment) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Enrollment) GetAlg() Alg {
	if m != nil {
		return m.Alg
	}
	return Alg_SHA_1
}

func (m *Enrollment) GetMode() Mode {
	if m != nil {
		return m.Mode
	}
	return Mode_TIME
}

func (m *Enrollment) GetDigits() Digits {
	if m != nil {
		return m.Digits
	}
	return Digits_SIX
}

func (m *Enrollment) GetPeriod() uint32 {
	if m != nil {
		return m.Period
	}
	return 0
}

func (m *Enrollment) GetSecretSize() uint32 {
	if m != nil {
		return m.SecretSize
	}
	return 0
}

type EnrollmentResponse struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	UserBlob             string   `protobuf:"bytes,2,opt,name=userBlob" json:"userBlob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnrollmentResponse) Reset()         { *m = EnrollmentResponse{} }
func (m *EnrollmentResponse) String() string { return proto.CompactTextString(m) }
func (*EnrollmentResponse) ProtoMessage()    {}
func (*EnrollmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_otp_335137b2d8af27c1, []int{1}
}
func (m *EnrollmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnrollmentResponse.Unmarshal(m, b)
}
func (m *EnrollmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnrollmentResponse.Marshal(b, m, deterministic)
}
func (dst *EnrollmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnrollmentResponse.Merge(dst, src)
}
func (m *EnrollmentResponse) XXX_Size() int {
	return xxx_messageInfo_EnrollmentResponse.Size(m)
}
func (m *EnrollmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnrollmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnrollmentResponse proto.InternalMessageInfo

func (m *EnrollmentResponse) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *EnrollmentResponse) GetUserBlob() string {
	if m != nil {
		return m.UserBlob
	}
	return ""
}

type Credentials struct {
	Otp                  string   `protobuf:"bytes,1,opt,name=otp" json:"otp,omitempty"`
	UserBlob             string   `protobuf:"bytes,2,opt,name=userBlob" json:"userBlob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Credentials) Reset()         { *m = Credentials{} }
func (m *Credentials) String() string { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()    {}
func (*Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_otp_335137b2d8af27c1, []int{2}
}
func (m *Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credentials.Unmarshal(m, b)
}
func (m *Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credentials.Marshal(b, m, deterministic)
}
func (dst *Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credentials.Merge(dst, src)
}
func (m *Credentials) XXX_Size() int {
	return xxx_messageInfo_Credentials.Size(m)
}
func (m *Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_Credentials proto.InternalMessageInfo

func (m *Credentials) GetOtp() string {
	if m != nil {
		return m.Otp
	}
	return ""
}

func (m *Credentials) GetUserBlob() string {
	if m != nil {
		return m.UserBlob
	}
	return ""
}

type AuthResponse struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid" json:"valid,omitempty"`
	UserBlob             string   `protobuf:"bytes,2,opt,name=userBlob" json:"userBlob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_otp_335137b2d8af27c1, []int{3}
}
func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (dst *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(dst, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *AuthResponse) GetUserBlob() string {
	if m != nil {
		return m.UserBlob
	}
	return ""
}

func init() {
	proto.RegisterType((*Enrollment)(nil), "gotp.Enrollment")
	proto.RegisterType((*EnrollmentResponse)(nil), "gotp.EnrollmentResponse")
	proto.RegisterType((*Credentials)(nil), "gotp.Credentials")
	proto.RegisterType((*AuthResponse)(nil), "gotp.AuthResponse")
	proto.RegisterEnum("gotp.Alg", Alg_name, Alg_value)
	proto.RegisterEnum("gotp.Mode", Mode_name, Mode_value)
	proto.RegisterEnum("gotp.Digits", Digits_name, Digits_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OTP service

type OTPClient interface {
	Enroll(ctx context.Context, in *Enrollment, opts ...grpc.CallOption) (*EnrollmentResponse, error)
	Auth(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*AuthResponse, error)
}

type oTPClient struct {
	cc *grpc.ClientConn
}

func NewOTPClient(cc *grpc.ClientConn) OTPClient {
	return &oTPClient{cc}
}

func (c *oTPClient) Enroll(ctx context.Context, in *Enrollment, opts ...grpc.CallOption) (*EnrollmentResponse, error) {
	out := new(EnrollmentResponse)
	err := grpc.Invoke(ctx, "/gotp.OTP/Enroll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oTPClient) Auth(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := grpc.Invoke(ctx, "/gotp.OTP/Auth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OTP service

type OTPServer interface {
	Enroll(context.Context, *Enrollment) (*EnrollmentResponse, error)
	Auth(context.Context, *Credentials) (*AuthResponse, error)
}

func RegisterOTPServer(s *grpc.Server, srv OTPServer) {
	s.RegisterService(&_OTP_serviceDesc, srv)
}

func _OTP_Enroll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Enrollment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OTPServer).Enroll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gotp.OTP/Enroll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OTPServer).Enroll(ctx, req.(*Enrollment))
	}
	return interceptor(ctx, in, info, handler)
}

func _OTP_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Credentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OTPServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gotp.OTP/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OTPServer).Auth(ctx, req.(*Credentials))
	}
	return interceptor(ctx, in, info, handler)
}

var _OTP_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gotp.OTP",
	HandlerType: (*OTPServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enroll",
			Handler:    _OTP_Enroll_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _OTP_Auth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "otp.proto",
}

func init() { proto.RegisterFile("otp.proto", fileDescriptor_otp_335137b2d8af27c1) }

var fileDescriptor_otp_335137b2d8af27c1 = []byte{
	// 403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x41, 0x6f, 0xd3, 0x30,
	0x18, 0xad, 0x97, 0x2c, 0x6d, 0xbf, 0x0d, 0x64, 0x3e, 0x21, 0x64, 0x15, 0x98, 0xaa, 0x88, 0x43,
	0xd5, 0x43, 0xd1, 0x8a, 0xb6, 0x0b, 0x17, 0xba, 0x51, 0xb1, 0x1e, 0xc6, 0x90, 0x5b, 0x24, 0x6e,
	0xa8, 0x6b, 0xac, 0x60, 0xc9, 0x8b, 0x23, 0xdb, 0xe1, 0xc0, 0x3f, 0xe5, 0xdf, 0x20, 0xdb, 0xc9,
	0x56, 0x71, 0xe8, 0xcd, 0xef, 0xbd, 0xef, 0x7d, 0xc9, 0x7b, 0x36, 0x0c, 0xb5, 0xab, 0x67, 0xb5,
	0xd1, 0x4e, 0x63, 0x5a, 0x6a, 0x57, 0xe7, 0x7f, 0x09, 0xc0, 0xb2, 0x32, 0x5a, 0xa9, 0x07, 0x51,
	0x39, 0x7c, 0x05, 0x99, 0xb4, 0xb6, 0x11, 0x86, 0x91, 0x31, 0x99, 0x0c, 0x79, 0x8b, 0x90, 0x41,
	0x7f, 0xbb, 0xdb, 0xe9, 0xa6, 0x72, 0xec, 0x28, 0x08, 0x1d, 0xc4, 0xd7, 0x90, 0x6c, 0x55, 0xc9,
	0x92, 0x31, 0x99, 0x3c, 0x9f, 0x0f, 0x67, 0x7e, 0xe9, 0x6c, 0xa1, 0x4a, 0xee, 0x59, 0x3c, 0x83,
	0xf4, 0x41, 0x17, 0x82, 0xa5, 0x41, 0x85, 0xa8, 0xde, 0xea, 0x42, 0xf0, 0xc0, 0xe3, 0x3b, 0xc8,
	0x0a, 0x59, 0x4a, 0x67, 0x59, 0x16, 0x26, 0x4e, 0xe3, 0xc4, 0xe7, 0xc0, 0xf1, 0x56, 0xf3, 0x3f,
	0x55, 0x0b, 0x23, 0x75, 0xc1, 0xfa, 0x63, 0x32, 0x79, 0xc6, 0x5b, 0x84, 0x67, 0x00, 0x56, 0xec,
	0x8c, 0x70, 0x6b, 0xf9, 0x47, 0xb0, 0x41, 0xd0, 0xf6, 0x98, 0xfc, 0x0a, 0xf0, 0x29, 0x1a, 0x17,
	0xb6, 0xd6, 0x95, 0x15, 0x48, 0x21, 0x69, 0x8c, 0x6c, 0xf3, 0xf9, 0x23, 0x8e, 0x60, 0xd0, 0x58,
	0x61, 0xae, 0x94, 0xbe, 0x6f, 0xd3, 0x3d, 0xe2, 0xfc, 0x23, 0x9c, 0x5c, 0x1b, 0x51, 0x88, 0xca,
	0xc9, 0xad, 0xb2, 0xde, 0xac, 0x5d, 0xdd, 0x99, 0xb5, 0xab, 0x0f, 0x9a, 0x3f, 0xc1, 0xe9, 0xa2,
	0x71, 0xbf, 0x1e, 0x3f, 0xfd, 0x12, 0x8e, 0x7f, 0x6f, 0x95, 0x2c, 0x82, 0x7f, 0xc0, 0x23, 0x38,
	0xb4, 0x61, 0x3a, 0x85, 0x64, 0xa1, 0x4a, 0x1c, 0xc2, 0xf1, 0xfa, 0x66, 0xf1, 0xf3, 0x9c, 0xf6,
	0xf0, 0x04, 0xfa, 0xfe, 0x38, 0xbf, 0xb8, 0xa4, 0xa4, 0x03, 0x17, 0xe7, 0x73, 0x7a, 0x34, 0x7d,
	0x0b, 0xa9, 0xaf, 0x16, 0x07, 0x90, 0x6e, 0x56, 0xb7, 0xcb, 0x38, 0x7b, 0x7d, 0xf7, 0xfd, 0xeb,
	0x66, 0xc9, 0x29, 0x99, 0xbe, 0x81, 0x2c, 0xf6, 0x8a, 0x7d, 0x48, 0xd6, 0xab, 0x1f, 0xb4, 0xe7,
	0xd7, 0x2e, 0x57, 0x5f, 0x6e, 0x36, 0x94, 0xcc, 0x2b, 0x48, 0xee, 0x36, 0xdf, 0xf0, 0x12, 0xb2,
	0x58, 0x19, 0xd2, 0x78, 0x15, 0x4f, 0x05, 0x8e, 0xd8, 0xff, 0x4c, 0x97, 0x2b, 0xef, 0xe1, 0x7b,
	0x48, 0x7d, 0x52, 0x7c, 0x11, 0x67, 0xf6, 0x2a, 0x1b, 0x61, 0xfb, 0x26, 0xf6, 0x8a, 0xc8, 0x7b,
	0xf7, 0x59, 0x78, 0x84, 0x1f, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x2d, 0xc8, 0x53, 0x91,
	0x02, 0x00, 0x00,
}
